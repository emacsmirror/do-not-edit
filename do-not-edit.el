;;; do-not-edit.el --- read-only buffer for generated files

;; Copyright 2009, 2010 Kevin Ryde
;;
;; Author: Kevin Ryde <user42@zip.com.au>
;; Version: 5
;; Keywords: convenience
;; URL: http://user42.tuxfamily.org/do-not-edit/index.html
;; EmacsWiki: CategoryFiles
;;
;; do-not-edit.el is free software; you can redistribute it and/or modify it
;; under the terms of the GNU General Public License as published by the
;; Free Software Foundation; either version 3, or (at your option) any later
;; version.
;;
;; do-not-edit.el is distributed in the hope that it will be useful, but
;; WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
;; Public License for more details.
;;
;; You can get a copy of the GNU General Public License online at
;; <http://www.gnu.org/licenses/>.


;;; Commentary:

;; This spot of code makes a buffer read-only if it contains "DO NOT EDIT"
;; or "DO NOT MODIFY", to keep you from accidentally editing generated
;; files.  See the `do-not-edit-readonly' docstring below for more.

;;; Install:

;; Put do-not-edit.el in one of your `load-path' directories, and in
;; your .emacs add
;;
;;     (autoload 'do-not-edit-readonly "do-not-edit")
;;     (add-to-list 'find-file-hooks 'do-not-edit-readonly)
;;
;; There's an autoload cookie below for the function, if you know how to use
;; `update-file-autoloads' and friends; then just customize or add to
;; find-file-hooks.

;;; History:

;; Version 1 - the first version
;; Version 2 - more "Don't edit"s
;; Version 3 - add ppport.h form
;; Version 4 - add emacs autoload-rubric and a mozilla form
;; Version 5 - new `do-not-edit-perl-blib'

;;; Code:

(defconst do-not-edit-regexp
  (eval-when-compile
    (concat
     ;; first line, per `autoload-rubric'
     "\\`;;; .* --- \\(automatically extracted\\)"
     "\\|"
     (regexp-opt '("DO NOT EDIT"
                   "DO NOT MODIFY"
                   "Don't edit this file"  ;; Perl ExtUtils::MakeMaker
                   "Do not edit this file" ;; Perl ExtUtils::ParseXS
                   "Do NOT edit this file" ;; Perl Devel::PPPort
                   "Do not edit."          ;; various mozilla
                   )))))

;;;###autoload
(defun do-not-edit-readonly ()
  "If the buffer has DO NOT EDIT then set it read-only.
This function is designed for use from `find-file-hooks'.

It keeps you from editing generated files etc which announce
themselves

   * DO NOT EDIT
   * DO NOT MODIFY
   * Don't edit this file     (Perl ExtUtils::MakeMaker)
   * Do not edit this file    (Perl ExtUtils::ParseXS)
   * Do NOT edit this file    (Perl Devel::PPPort)
   * Do not edit.             (various mozilla)
   * automatically extracted  (Emacs `autoload-rubric')

near the start of the buffer.  If you really do want to edit you
can always `\\[toggle-read-only]' \(`toggle-read-only') in the usual way.

The alternative is to remove \"w\" write permission from
generated files.  Emacs makes the buffer read-only for read-only
files.  But perms can be annoying if they make \"rm\" query about
removing; and code generating the file may have to know to set
writable/unwritable when updating.

The do-not-edit.el home page is
URL `http://user42.tuxfamily.org/do-not-edit/index.html'"

  (save-excursion
    (goto-char (point-min))
    (let ((case-fold-search nil))
      (when (re-search-forward do-not-edit-regexp
                               (save-excursion (forward-line 20) (point))
                               t)
        (message "Read-only due to %S" (or (match-string 1)
                                           (match-string 0)))
        (setq buffer-read-only t)))))

;;;###autoload
(custom-add-option 'find-file-hooks 'do-not-edit-readonly)

;;;###autoload
(defun do-not-edit-perl-blib ()
  "If the buffer file is under a Perl \"blib\" then set read-only.
This function is designed for use from `find-file-hooks'.

It keeps you from editing files under an ExtUtils::MakeMaker
/blib/ directory since the files there are copies from the
working directory and will be overwritten by a further \"make\"
or removed by \"make clean\".

`file-truename' of the `buffer-file-name' is checked (when not
nil), so in the unlikely case a blib file is a symlink to
somewhere else then that target can still be edited through the
link.

If you really want to edit a blib file you can always `\\[toggle-read-only]'
\(`toggle-read-only') in the usual way."

  (when (and buffer-file-name
             (let ((case-fold-search nil))
               (string-match "/blib/" (file-truename buffer-file-name))))
    (setq buffer-read-only t)
    (message "Read-only under Perl blib")))

;;;###autoload
(custom-add-option 'find-file-hooks 'do-not-edit-perl-blib)

(provide 'do-not-edit)

;;; do-not-edit.el ends here
